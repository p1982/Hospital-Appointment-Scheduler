# name: CI/CD Pipeline

# on:
#   push:
#     branches:
#       - main 

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v2

#     - name: Set up Node.js
#       uses: actions/setup-node@v2
#       with:
#         node-version: '16' 

#     - name: Install dependencies
#       run: npm ci

#     - name: Lint code
#       run: npx eslint ./src

#     - name: Run tests
#       run: npm test

#     - name: Run build
#       run: npm run build

#     # - name: Build Docker image
#     #   run: docker build -t hospital-appointment-scheduler .

#     # - name: Push Docker image to Docker Hub
#     #   run: docker push hospital-appointment-scheduler


#   # deploy:
#   #   needs: build
#   #   runs-on: ubuntu-latest

#   #   steps:
#   #   - name: Checkout repository
#   #     uses: actions/checkout@v2

#   #   - name: Deploy to server
#   #     env:
#   #       SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
#   #       SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
#   #       SERVER_USER: ${{ secrets.SERVER_USER }}
#   #       SERVER_IP: ${{ secrets.SERVER_IP }}
#   #     run: |
#   #       mkdir -p ~/.ssh
#   #       echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
#   #       chmod 600 ~/.ssh/id_rsa
#   #       echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
#   #       ssh $SERVER_USER@$SERVER_IP 'docker pull hospital-appointment-scheduler && docker run -d -p 8000:8000 hospital-appointment-scheduler'

name: CI/CD Pipeline

on:
  push:
    branches:
      - main 

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16' 

    - name: Install dependencies
      run: npm ci

    - name: Lint code
      run: npx eslint ./src

    - name: Run build
      run: npm run build

    - name: Run tests with coverage
      run: npm run test

    - name: Upload coverage report
      uses: actions/upload-artifact@v2
      with:
        name: coverage-report
        path: coverage
